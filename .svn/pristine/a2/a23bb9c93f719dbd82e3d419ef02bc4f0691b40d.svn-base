import axios from 'axios'

/**
 * 跳转至登录页
 */
const reLogin = () => {
  this.$router.replace({
    path: '/login',
    query: {
      redirect: this.$router.currentRoute.fullPath
    }
  })
}

const errorHandle = (status, other) => {
  switch (status) {
    case 401:
      console.log('need login')
      reLogin()
      break
    case 402:
      console.log('token is outdate')
      reLogin()
      break
    case 404:
      console.log('not found')
      break
    default:
      console.log('error')
  }
}

/**
 * 创建axios实例
 * 设置请求超时 { timeout }
 */
const service = axios.create({
  timeout: 10000
})

service.defaults.headers.common['Authorization'] = 'AUTH_TOKEN'
service.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'

/**
 * 请求拦截器
 * @param { object } config 请求参数
 */
service.interceptors.request.use((config) => {
  const token = this.$store.state.token
  token && (config.headers.Authorization = token)
  return config
}, function (error) {
  return Promise.reject(error)
})

/**
 * 响应拦截器
 * @param { object } response 响应参数
 */
service.interceptors.response.use(response => {
  if (response.status === 200) {
    return Promise.resolve(response)
  } else {
    return Promise.reject(response)
  }
}, error => {
  if (error) {
    let httpError = {
      hasError: true,
      status: error.response.status,
      statusText: error.response.statusText
    }
    this.$store.commit('on_http_error', httpError)
    errorHandle(httpError.status)
    return Promise.reject(error)
  } else {
    console.log('netword disconnected')
  }
})

export default service
