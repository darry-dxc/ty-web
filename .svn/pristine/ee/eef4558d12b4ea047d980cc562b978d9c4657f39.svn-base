<template>
  <div>
    <a-table
      :rowKey="record => record.entrystaffLogId"
      :columns="columns"
      :dataSource="data"
      :loading="loading"
      :pagination="false"
      bordered
    >
      <template slot="name" slot-scope="text">
        <a href="javascript:;" @click="onClick(text)">{{text}}</a>
      </template>
      <template slot="title">
        <a-form
          layout="inline"
          :form="form"
          @submit="handleSubmit"
        >
          <a-form-item
            label="姓名"
          >
            <a-input
              v-decorator="[
                'entrystaffName'
              ]"
            />
          </a-form-item>
          <a-form-item
            label="手机号"
          >
            <a-input
              v-decorator="[
                'entrystaffPhone'
              ]"
            />
          </a-form-item>
          <a-form-item
            label="操作类型"
          >
            <a-input
              v-decorator="[
                'operateType'
              ]"
            />
          </a-form-item>
          <a-form-item
            label="操作时间"
          >
            <a-range-picker
              :placeholder="placeholder"
              format="YYYY/MM/DD"
              v-decorator="[
                'operateTime'
              ]"
            />
          </a-form-item>
          <a-form-item>
            <a-button type="primary" icon="search" html-type="submit">查询</a-button>
          </a-form-item>
          <a-form-item>
            <a-button @click="resetForm">重置</a-button>
          </a-form-item>
          <a-form-item>
            <a-button type="dashed" icon="download">列表导出</a-button>
          </a-form-item>
        </a-form>
      </template>
    </a-table>
    <a-pagination
      :current="pagination.pageNum"
      :pageSize="pagination.pageSize"
      :total="pagination.total"
      :pageSizeOptions="pagination.pageSizeOptions"
      :showTotal="total => `共 ${total} 条数据`"
      showSizeChanger
      showQuickJumper
      @change="handlePageChange"
      @showSizeChange="showSizeChange"
      style="margin: 16px 0; float: right"
    />
  </div>
</template>

<script>
const columns = [{
  title: '姓名',
  dataIndex: 'entrystaffAccount',
  scopedSlots: { customRender: 'name' }
}, {
  title: '手机号',
  dataIndex: 'entrystaffPhone'
}, {
  title: '操作类型',
  dataIndex: 'operateType'
}, {
  title: '操作描述',
  dataIndex: 'operateContent'
}, {
  title: '操作时间',
  dataIndex: 'operateTime'
}]

export default {
  data () {
    return {
      data: [],
      columns,
      form: this.$form.createForm(this),
      placeholder: ['开始时间', '结束时间'],
      loading: false,
      pageSizeOptions: ['5', '10', '15', '20'],
      pagination: {
        pageNum: 1,
        pageSize: 5,
        total: 0,
        pageSizeOptions: ['5', '10', '15', '20']
      }
    }
  },

  components: {},

  created() {
    this.fetch()
  },

  methods: {
    onClick (key) {},
    handleSubmit () {
      this.form.validateFields((err, values) => {
        if (!err) {
          const submitValues = {
            ...values,
            beginTime: values.operateTime && values.operateTime[0].format('YYYY-MM-DD HH:mm:ss'),
            endTime: values.operateTime && values.operateTime[1].format('YYYY-MM-DD HH:mm:ss')
          }
          delete submitValues.operateTime
          this.fetch(Object.assign(submitValues, this.pagination))
        }
      })
    },
    fetch (params = {}) {
      this.loading = true
      delete params.pageSizeOptions
      this.$api.logs.reporterLogs(params).then(
        res => {
          console.log(res)
          if (res.code === 200) {
            const pagination = { ...this.pagination }
            pagination.total = res.data.total
            this.pagination = pagination
            this.data = res.data.list
          } else {
            this.data = []
          }
          this.loading = false
        }
      ).catch(e => {
        this.loading = false
        this.$message.error(e.data)
      })
    },
    resetForm () {
      this.form.resetFields()
      this.handleSubmit()
    },
    showSizeChange (current, pageSize) {
      const pager = { ...this.pagination }
      pager.pageNum = current
      pager.current = current
      pager.pageSize = pageSize
      this.pagination = pager
      this.form.validateFields((err, values) => {
        if (!err) {
          this.fetch(Object.assign(values, this.pagination))
        }
      })
    },
    handlePageChange (current) {
      const pager = { ...this.pagination }
      pager.pageNum = current
      pager.current = current
      this.pagination = pager
      this.form.validateFields((err, values) => {
        if (!err) {
          this.fetch(Object.assign(values, this.pagination))
        }
      })
    }
  }
}

</script>
<style scoped>
</style>
