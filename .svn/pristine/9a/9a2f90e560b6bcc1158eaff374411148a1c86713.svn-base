<template>
  <div>
    <a-table
      :rowKey="record => record.recordId"
      :columns="columns"
      :dataSource="data"
      :loading="loading"
      :pagination="false"
      @change="handleTableChange"
      bordered>
      <template slot="name" slot-scope="text">
        <a href="javascript:;" @click="onClick(text)">{{text}}</a>
      </template>
      <template slot="title" slot-scope="currentPageData">
        <a-form
          layout="inline"
          :form="form"
          ref="form"
          @submit="handleSubmit"
        >
          <a-form-item
            label="运输单号"
          >
            <a-input
              v-decorator="[
              'businessId'
            ]"
            ></a-input>
          </a-form-item>
          <a-form-item
            label="驾驶员姓名"
          >
            <a-input
              v-decorator="[
              'driverName'
            ]"
            ></a-input>
          </a-form-item>
          <a-form-item
            label="车头车牌号"
          >
            <a-input
              v-decorator="[
              'headStockPlateNumber'
            ]"
            ></a-input>
          </a-form-item>
          <a-form-item
            label="提交时间"
          >
            <a-range-picker
              @change="onChange"
              :placeholder="placeholder"
              format="YYYY/MM/DD"
            />
          </a-form-item>
          <a-form-item>
            <a-button type="primary" icon="search" html-type="submit">查询</a-button>
          </a-form-item>
        </a-form>
      </template>
    </a-table>
    <a-pagination
      :current="pagination.current"
      :pageSize="pagination.pageSize"
      :total="pagination.total"
      :pageSizeOptions="pagination.pageSizeOptions"
      :showTotal="total => `共 ${total} 条数据`"
      showSizeChanger
      showQuickJumper
      @change="handlePageChange"
      @showSizeChange="showSizeChange"
      style="margin: 16px 0; float: right"
    />
  </div>
</template>

<script>
const columns = [{
  title: '运输单号',
  dataIndex: 'businessId',
  scopedSlots: { customRender: 'name' }
}, {
  title: '驾驶员姓名',
  dataIndex: 'driverName',
  scopedSlots: { customRender: 'name' }
}, {
  title: '驾驶员手机号码1',
  dataIndex: 'driverPhone1',
}, {
  title: '驾驶员手机号码2',
  dataIndex: 'driverPhone2',
}, {
  title: '车头车牌号',
  className: 'column-money',
  dataIndex: 'headStockPlateNumber'
}, {
  title: '提交时间',
  dataIndex: 'createTime'
}]

export default {
  data () {
    return {
      data: [],
      columns,
      form: this.$form.createForm(this),
      placeholder: ['开始时间', '结束时间'],
      loading: false,
      pageSizeOptions: ['5', '10', '15', '20'],
      pagination: {
        current: 1,
        pageSize: 5,
        total: 0,
        pageSizeOptions: ['5', '10', '15', '20']
      }
    }
  },

  created () {
    this.handleSubmit()
  },

  components: {},

  computed: {},

  methods: {
    onChange () {

    },
    onClick (key) {
      console.log(key)
      this.$router.push({ path: `/transpotArrange/action?key=${key}&isSolved=true` })
    },
    /**
     * 查询已完成运单
     */
    handleSubmit () {
      this.form.validateFields((err, values) => {
        if (!err) {
          if (values['createTime']) {
            const submitValues = {
              ...values,
              'startTime': values['createTime'][0].format('YYYY-MM-DD HH:mm:ss'),
              'endTime': values['createTime'][1].format('YYYY-MM-DD HH:mm:ss'),
              'createTime': undefined
            }
            this.fetch(Object.assign(submitValues, this.pagination))
          } else {
            this.fetch(Object.assign(values, this.pagination))
          }
        }
      })
    },
    /**
     * 表格分页变化
     */
    handleTableChange (pagination) {
      const pager = { ...this.pagination }
      pager.pageNum = pagination.current
      this.pagination = pager
      this.form.validateFields((err, values) => {
        if (!err) {
          this.fetch(Object.assign(values, this.pagination))
        }
      })
    },
    /**
     * 请求后台数据方法
     * @param { Object } params 请求参数
     */
    fetch (params = {}) {
      delete params.pageSizeOptions // 请求时移除参数中的数组对象，否则会抛出后台错误
      this.loading = true
      this.$api.arrange.getEntryByCriteria(params).then((res) => {
        if (res.code === 200) {
          const pagination = { ...this.pagination }
          pagination.total = res.data.total
          this.pagination = pagination
          this.data = res.data.list
        } else if (res.code === 43101) {
          this.data = [{
            recordId: '558018556411772928',
            businessId: '558018556411772929',
            entryStaffPhone: '13219016270',
            driverId: '558230301206118400',
            driverName: 'xiaoxie',
            driverPhone1: '18200192857',
            driverPhone2: '18200192851',
            escortId: '558310435191783424',
            escortName: 'xiaoxie',
            headStockId: '558230303504596992',
            headStockPlateNumber: 'aaa',
            trailerId: '558310435539910656',
            trailerPlateNumber: 'GDH8912',
            recordState: 1,
            createTime: null,
            entryTime: '2019-03-21 15:26:21',
            enterTime: null
          }, {
            recordId: '557974037842624512',
            businessId: '557974037842624513',
            entryStaffPhone: '13219016270',
            driverId: '558379946465034240',
            driverName: 'xiaoxie',
            driverPhone1: '18200192857',
            driverPhone2: '18200192851',
            escortId: '558379946737664000',
            escortName: 'xiaoxie',
            headStockId: '558379946699915264',
            headStockPlateNumber: 'bbb',
            trailerId: '558379946771218432',
            trailerPlateNumber: 'GDH8912',
            recordState: 1,
            createTime: null,
            entryTime: '2019-03-21 20:02:34',
            enterTime: null
          }]
        } else {
          this.data = []
          const pagination = { ...this.pagination }
          pagination.total = 0
          this.pagination = pagination
        }
        this.loading = false
      })
    },
    showSizeChange (current, pageSize) {
      const pager = { ...this.pagination }
      pager.pageNum = current
      pager.current = current
      pager.pageSize = pageSize
      this.pagination = pager
      this.form.validateFields((err, values) => {
        if (!err) {
          this.fetch(Object.assign(values,this.pagination))
        }
      })
    },
    handlePageChange (current) {
      const pager = { ...this.pagination }
      pager.pageNum = current
      pager.current = current
      this.pagination = pager
      this.form.validateFields((err, values) => {
        if (!err) {
          this.fetch(Object.assign(values, this.pagination))
        }
      })
    }
  }
}

</script>
<style lang='scss' scoped>
</style>
